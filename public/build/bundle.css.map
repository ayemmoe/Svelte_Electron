{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte",
    "../../FileDir.svelte",
    "../../FileTest.svelte"
  ],
  "sourcesContent": [
    "<script>\n\timport FileDir from './FileDir.svelte';\n\t\n</script>\n\n<main>\n<h1>File Tree</h1>\n\n<FileDir />\n\n</main>\n\n<style>\n    main {\n\t\ttext-align: left;\n\t\tfloat: left;\n\t\twidth: 100%;\t\t \n\t\tmax-width: 240px;\n\t\tmargin: 0 auto;\n\t\tpadding: 0.1em;\n\t\tbackground-color: rgb(241, 221, 221);\n\t\tcolor: rgb(66, 60, 60)\n\n    }\n\n\th1 {\n\t\tcolor: black;\n\t\ttext-transform: uppercase;\n\t\tfont-size: 2em;\n\t\tfont-weight: 100;\n\t}\n\n\tfileArea {\n\t\twidth: 100%;\n\t\theight: auto;\n\t\tbackground-color: burlywood;\n\t\tcolor: black;\n\t}\n\t\n</style>\n\n\n",
    "<script>  \n    var remote = window.require('electron').remote;\n    var electronFs = remote.require('fs');\n    var {dialog} = remote;\n    import FileTest from './FileTest.svelte'\n    let savedTree = [];\nconst handleOpenFolder = () => {\n        //console.log('saved Tree', savedTree)\n        let dialogOption =  {properties: ['openDirectory']};\n        //console.log(dialog)\n        dialog.showOpenDialog(dialogOption)\n        .then( filenames => {\n        var directory = filenames.filePaths;\n        \n        if (directory && directory[0]){        \n            var fileTree = new FileTree(directory[0]);        \n            fileTree.build();\n            //this.setState({fileTree});\n            savedTree = fileTree.items;\n           \n            //console.log(Array.isArray(savedTree))\n            console.log('fileTree',savedTree);\n        }\n        })\n    }\n\nclass FileTree {\n    constructor(path, name = null){\n        \n        this.path = path;\n        this.name = name;\n        this.items = [];\n        this.state = {\n            path : path,\n            name: name,\n            items: [],\n            color : 'white',\n            isOpen : false\n        }\n\n\n        \n        //this.handleToggle = this.handleToggle.bind(this);\n        //console.log(this.state.isOpen)\n    }\n\n    //method to build file tree\n    build () {\n        this.items = FileTree.readDir(this.path);\n    }\n    static readDir(path) {\n        var fileArray = [];        \n        \n        electronFs.readdirSync(path).forEach(file => {\n            var fileInfo = new FileTree(`${path}/${file}`,file);\n            var stat = electronFs.statSync(fileInfo.path);\n\n            if (stat.isDirectory()){\n                fileInfo.items = FileTree.readDir(fileInfo.path);\n            }\n\n            fileArray.push(fileInfo);\n        })\n        \n        return fileArray;\n    }\n\n}\n</script>\n<div>\n<button on:click={handleOpenFolder}>Get Files</button>\n<fileArea>\n<FileTest fileTree={savedTree} />\n</fileArea>\n</div>\n\n<style>\n    fileArea {\n    width: 300px;\n    height: 100%;\n    background-color: rgb(120, 202, 202);\n    }\n</style>",
    "<script>\n\n    export let fileTree;\n    const fileState = {};\n    const toggleVisibility = (path) => {\n        if(!fileState[path]) fileState[path]= true;\n        else fileState[path] = false;\n    }\n</script>\n{#each fileTree as {path,name, items}}\n<ul>\n    {#if items.length > 0}\n    <li on:click={toggleVisibility(path)} class=\"liFolder\">{name}</li>\n    {:else}\n    <li on:click={toggleVisibility(path)} class=\"liFiles\">{name}</li>\n    {/if}\n    {#if fileState[path] && items.length > 0}\n      \n      <svelte:self fileTree={items.sort((a,b) => {\n          return b.items.length - a.items.length\n      })} />\n    {/if}\n</ul>\n{/each}\n\n<style>\n    .liFolder {\n        margin: 0;\n        padding: 10px 0 10px 25px;\n        list-style: none;\n        background-image: url('../img/folder.png');\n        background-repeat: no-repeat;\n        background-position: left;\n        background-size: 20px;\n    }\n\n    .liFiles {\n        margin-left: 10px;\n        list-style: none;\n    }\n</style>"
  ],
  "names": [],
  "mappings": "AAaI,IAAI,eAAC,CAAC,AACR,UAAU,CAAE,IAAI,CAChB,KAAK,CAAE,IAAI,CACX,KAAK,CAAE,IAAI,CACX,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,CAAC,CAAC,IAAI,CACd,OAAO,CAAE,KAAK,CACd,gBAAgB,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CACpC,KAAK,CAAE,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC;;IAEpB,CAAC,AAEJ,EAAE,eAAC,CAAC,AACH,KAAK,CAAE,KAAK,CACZ,cAAc,CAAE,SAAS,CACzB,SAAS,CAAE,GAAG,CACd,WAAW,CAAE,GAAG,AACjB,CAAC;AC+CE,QAAQ,eAAC,CAAC,AACV,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,IAAI,CACZ,gBAAgB,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,AACpC,CAAC;ACvDD,SAAS,cAAC,CAAC,AACP,MAAM,CAAE,CAAC,CACT,OAAO,CAAE,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CACzB,UAAU,CAAE,IAAI,CAChB,gBAAgB,CAAE,IAAI,mBAAmB,CAAC,CAC1C,iBAAiB,CAAE,SAAS,CAC5B,mBAAmB,CAAE,IAAI,CACzB,eAAe,CAAE,IAAI,AACzB,CAAC,AAED,QAAQ,cAAC,CAAC,AACN,WAAW,CAAE,IAAI,CACjB,UAAU,CAAE,IAAI,AACpB,CAAC"
}